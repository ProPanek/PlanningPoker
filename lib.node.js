!function(e){var r={};function o(t){if(r[t])return r[t].exports;var i=r[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=e,o.c=r,o.d=function(e,r,t){o.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,r){if(1&r&&(e=o(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var i in e)o.d(t,i,function(r){return e[r]}.bind(null,i));return t},o.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(r,"a",r),r},o.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},o.p="",o(o.s=9)}([function(e,r){e.exports=require("lodash/findIndex")},function(e,r){e.exports=require("bcrypt")},function(e,r){e.exports=require("express")},function(e,r){e.exports=require("path")},function(e,r){e.exports=require("http")},function(e,r){e.exports=require("socket.io")},function(e,r){e.exports=require("uuid/v4")},function(e,r){e.exports=require("jira-connector")},function(e,r){e.exports=require("date-and-time")},function(e,r,o){"use strict";o.r(r),function(e){var r=o(2),t=o.n(r),i=o(4),s=o.n(i),n=o(5),a=o.n(n),u=o(0),c=o.n(u),d=o(3),l=o.n(d),m=o(6),g=o.n(m),f=o(7),p=o.n(f),h=o(8),I=o.n(h),y=o(1),b=o.n(y);const j=process.env.PORT||5e3,v=t()(),U=s.a.createServer(v),S=a()(U,{cookie:!1});let w,x=[],N=new Map,k=new Map,P=new Map;S.on("connection",e=>{console.log("User -> connected to server id:",e.id),e.on("jiraLogin",({jiraLogin:r,jiraPassword:o,jiraSubdomain:t})=>{(w=new p.a({host:`${t}.atlassian.net`,basic_auth:{username:r,password:o}}))&&w.board.getAllBoards({startAt:0},function(r,o){e.emit("jiraLogin",o),console.log("Jira -> connecting and fetching boards",r),r&&e.emit("errors",{error:r})})}),e.on("jiraGetBoard",r=>{w.board.getIssuesForBacklog({boardId:r},function(r,o){let t=[];for(let e=0;e<o.issues.length;e++)t.push({id:o.issues[e].id,key:o.issues[e].key,summary:o.issues[e].fields.summary,description:o.issues[e].fields.description,comments:o.issues[e].fields.comment.comments,priorityType:o.issues[e].fields.priority.name,priorityUrl:o.issues[e].fields.priority.iconUrl,issueUrl:o.issues[e].fields.issuetype.iconUrl});e.emit("jiraGetBacklogBoard",t),console.log("Jira -> fetching singe board"),r&&e.emit("errors",{error:r})}),w.board.getIssuesForBoard({boardId:r},function(r,o){let t=[];for(let e=0;e<o.issues.length;e++)t.push({id:o.issues[e].id,key:o.issues[e].key,summary:o.issues[e].fields.summary,description:o.issues[e].fields.description,comments:o.issues[e].fields.comment.comments,priorityType:o.issues[e].fields.priority.name,priorityUrl:o.issues[e].fields.priority.iconUrl,issueUrl:o.issues[e].fields.issuetype.iconUrl});e.emit("jiraGetBoard",t),console.log("Jira -> fetching singe board"),r&&e.emit("errors",{error:r})})}),e.on("jiraSetEstimation",({issueId:r,boardId:o,estimationScore:t})=>{w.issue.setIssueEstimation({issueId:r,boardId:o,value:t},function(o){console.log(`Jira -> setting estimation for id: ${r} value: ${t}`),o&&e.emit("errors",{error:o})})}),e.on("createRoom",({userName:r,roomName:o,roomPassword:t})=>{const i={roomName:"",roomId:"",createTimestamp:"",user:[],game:[],gameHistory:[]},s=g()();let n=new Date;n=I.a.format(n,"YYYY/MM/DD HH:mm:ss"),i.user.push({userId:e.id,userName:r}),i.roomName=o,i.roomId=s,i.createTimestamp=n,b.a.hash(t,10,function(r,o){P.set(s,o),r&&e.emit("errors",{error:r})}),k.set(s,i),N.set(e.id,s),x.push(i),e.join(s),e.emit("createRoom",i),S.in(s).emit("waitingFor",i.game.length),console.log("User -> Created room! RoomId:",s)}),setInterval(()=>{e.emit("fetchRooms",x)},1e3),e.on("joinRoom",({roomId:r,roomPassword:o,userName:t})=>{let i=k.get(r);if(i){const s=P.get(r);b.a.compare(o,s,function(o,s){if(s){i.user.push({userId:e.id,userName:t}),N.set(e.id,r),e.join(r);let o=c()(i,function(e){return e.roomId===r});-1!==o&&x[o].user.push({userId:e.id,userName:t}),console.log("User -> Joined room! RoomId:",r),e.emit("joinRoom",i),k.set(r,i),S.in(r).emit("waitingFor",i.game.length)}else e.emit("errors",{error:"Invalid Password"})})}else e.emit("errors",{error:"Room not found"})}),e.on("deleteRoom",({roomId:r,roomPassword:o})=>{const t=P.get(r);b.a.compare(o,t,function(o,t){if(t){let e=c()(x,function(e){return e.roomId===r});x.splice(e,1),k.delete(r),console.log("User -> Deleted room! RoomId:",r)}else e.emit("errors",{error:"Invalid Password (delete)"})})}),e.on("sendCard",({roomId:e,userName:r,cardValue:o})=>{let t=k.get(e);if(t){t.game.push({userName:r,cardValue:o});let i=c()(t.user,function(e){return e.userName===r});t.user[i].userName=`${t.user[i].userName} - âœ”`,t.user.length===t.game.length?(S.in(e).emit("sendCard",t.game),S.in(e).emit("waitingFor",t.game.length)):S.in(e).emit("waitingFor",t.game.length),k.set(e,t)}}),e.on("resetCards",({roomId:e})=>{let r=k.get(e);if(r){for(let e=0;e<r.user.length;e++){let o=r.user[e].userName.split(" - ");r.user[e].userName=o[0]}r.gameHistory.push(r.game),S.in(e).emit("resetCards",r.gameHistory),r.game=[],r.title="",r.description="",S.in(e).emit("waitingFor",r.game.length),k.set(e,r)}}),e.on("fetchUsers",({roomId:e})=>{setInterval(()=>{const r=k.get(e);r&&(S.in(e).emit("fetchUsers",r.user),1===r.user.length&&S.in(e.toString()).emit("changeAdmin",r.user[0].userId))},1e3)}),e.on("kickUser",({userId:e})=>{let r=N.get(e);if(r){let o=k.get(r.toString()),t=c()(o.user,function(r){return r.userId===e});-1!==t&&(S.in(r.toString()).emit("kickUser",o.user[t]),o.user.splice(t,1),S.in(r.toString()).emit("waitingFor",o.game.length),1===o.user.length&&S.in(r.toString()).emit("changeAdmin",o.user[0].userId),k.set(r.toString(),o),console.log("User -> kicked"))}}),e.on("changeAdmin",({userId:e})=>{let r=N.get(e);if(r){let o=k.get(r.toString()),t=c()(o.user,function(r){return r.userId===e});-1!==t&&(S.in(r.toString()).emit("changeAdmin",o.user[t].userId),console.log("User -> admin permissions given"))}}),e.on("broadcastTitle",({roomId:r,title:o})=>{let t=k.get(r);t.title!==o&&(t.title=o,e.broadcast.to(r).emit("broadcastTitle",o),k.set(r,t))}),e.on("broadcastDescription",({roomId:r,description:o})=>{let t=k.get(r);t.description!==o&&(t.description=o,e.broadcast.to(r).emit("broadcastDescription",o),k.set(r,t))}),e.on("disconnect",()=>{let r=N.get(e.id);if(void 0!==r){let o=k.get(r.toString());if(void 0!==o){let t=c()(o.user,function(r){return r.userId===e.id});-1!==t&&(o.user.splice(t,1),S.in(r.toString()).emit("waitingFor",o.game.length),1===o.user.length&&S.in(r.toString()).emit("changeAdmin",o.user[0].userId),k.set(r.toString(),o),console.log("User -> disconnected from room"))}}console.log("User -> disconnected from server")}),e.on("disconnecting",e=>{console.log("User -> disconnecting reason:",e)}),e.on("reconnecting",e=>{console.log("User -> lost connection in process of reconnection reason:",e)}),e.on("reconnect",()=>{console.log("User -> user reconnected")})}),v.use(t.a.static(l.a.join(e,"client/build"))),v.get("*",function(r,o){o.sendFile(l.a.join(e,"client/build","index.html"))}),U.listen(j,()=>console.log(`Listening on port ${j}`))}.call(this,"/")}]);