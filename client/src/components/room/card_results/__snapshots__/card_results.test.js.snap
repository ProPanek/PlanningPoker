// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardResults renders without errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardResults
    store={
      Object {
        "room": Object {
          "cardResults": Array [],
          "waiting": Array [],
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef>
        <ForwardRef />
        <ForwardRef>
          <WithStyles(Typography)
            style={
              Object {
                "margin": "0 auto",
              }
            }
          >
             Waiting for response from all users 
          </WithStyles(Typography)>
        </ForwardRef>
      </ForwardRef>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef />,
          <ForwardRef>
            <WithStyles(Typography)
              style={
                Object {
                  "margin": "0 auto",
                }
              }
            >
               Waiting for response from all users 
            </WithStyles(Typography)>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": false,
          },
          "ref": null,
          "rendered": false,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": true,
              "rules": Array [
                "
  &&{
  margin: 0 auto;
  width: 90%;
  margin-bottom:10px;
  display:flex;
  }
",
              ],
            },
            "displayName": "styled.div",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "div",
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <WithStyles(Typography)
              style={
                Object {
                  "margin": "0 auto",
                }
              }
            >
               Waiting for response from all users 
            </WithStyles(Typography)>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": " Waiting for response from all users ",
              "style": Object {
                "margin": "0 auto",
              },
            },
            "ref": null,
            "rendered": " Waiting for response from all users ",
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": true,
              "rules": Array [
                "
  &&{
  margin: 0 auto;
  width: 90%;
  margin-bottom:10px;
  display:flex;
  }
",
              ],
            },
            "displayName": "styled.div",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "div",
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "Naked": [Function],
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
  display: flex;
  flex-direction: row;
  margin: 0 auto;
    margin-top:10px;

  width: 90%;
  flex-wrap: wrap;
",
          ],
        },
        "displayName": "Styled(WithStyles(Card))",
        "options": Object {
          "name": "MuiCard",
        },
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef>
          <ForwardRef />
          <ForwardRef>
            <WithStyles(Typography)
              style={
                Object {
                  "margin": "0 auto",
                }
              }
            >
               Waiting for response from all users 
            </WithStyles(Typography)>
          </ForwardRef>
        </ForwardRef>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef />,
            <ForwardRef>
              <WithStyles(Typography)
                style={
                  Object {
                    "margin": "0 auto",
                  }
                }
              >
                 Waiting for response from all users 
              </WithStyles(Typography)>
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": false,
            },
            "ref": null,
            "rendered": false,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": true,
                "rules": Array [
                  "
  &&{
  margin: 0 auto;
  width: 90%;
  margin-bottom:10px;
  display:flex;
  }
",
                ],
              },
              "displayName": "styled.div",
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "div",
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <WithStyles(Typography)
                style={
                  Object {
                    "margin": "0 auto",
                  }
                }
              >
                 Waiting for response from all users 
              </WithStyles(Typography)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": " Waiting for response from all users ",
                "style": Object {
                  "margin": "0 auto",
                },
              },
              "ref": null,
              "rendered": " Waiting for response from all users ",
              "type": [Function],
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": true,
                "rules": Array [
                  "
  &&{
  margin: 0 auto;
  width: 90%;
  margin-bottom:10px;
  display:flex;
  }
",
                ],
              },
              "displayName": "styled.div",
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "div",
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "Naked": [Function],
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  margin: 0 auto;
    margin-top:10px;

  width: 90%;
  flex-wrap: wrap;
",
            ],
          },
          "displayName": "Styled(WithStyles(Card))",
          "options": Object {
            "name": "MuiCard",
          },
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
