// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JoinRoom renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <JoinRoom
    store={
      Object {
        "jira": Object {
          "jiraBoards": Object {
            "values": Array [],
          },
          "jiraBoardsFetching": true,
        },
        "room": Object {
          "rooms": Array [],
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef>
        <ForwardRef>
          <select
            onClick={[Function]}
            size="10"
          />
          <TextField
            id="join-user-name"
            label="User Name"
            margin="normal"
            onChange={[Function]}
            required={false}
            select={false}
            value=""
            variant="standard"
          />
          <TextField
            id="join-room-password"
            label="Room Password"
            onChange={[Function]}
            required={false}
            select={false}
            type="password"
            value=""
            variant="standard"
          />
          <ForwardRef />
          <WithStyles(Button)
            onClick={[Function]}
          >
            Join room
          </WithStyles(Button)>
          <WithStyles(Button)
            onClick={[Function]}
          >
            Delete room
          </WithStyles(Button)>
        </ForwardRef>
      </ForwardRef>,
      "item": true,
      "xs": 6,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef>
          <select
            onClick={[Function]}
            size="10"
          />
          <TextField
            id="join-user-name"
            label="User Name"
            margin="normal"
            onChange={[Function]}
            required={false}
            select={false}
            value=""
            variant="standard"
          />
          <TextField
            id="join-room-password"
            label="Room Password"
            onChange={[Function]}
            required={false}
            select={false}
            type="password"
            value=""
            variant="standard"
          />
          <ForwardRef />
          <WithStyles(Button)
            onClick={[Function]}
          >
            Join room
          </WithStyles(Button)>
          <WithStyles(Button)
            onClick={[Function]}
          >
            Delete room
          </WithStyles(Button)>
        </ForwardRef>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <select
              onClick={[Function]}
              size="10"
            />,
            <TextField
              id="join-user-name"
              label="User Name"
              margin="normal"
              onChange={[Function]}
              required={false}
              select={false}
              value=""
              variant="standard"
            />,
            <TextField
              id="join-room-password"
              label="Room Password"
              onChange={[Function]}
              required={false}
              select={false}
              type="password"
              value=""
              variant="standard"
            />,
            <ForwardRef />,
            false,
            <WithStyles(Button)
              onClick={[Function]}
            >
              Join room
            </WithStyles(Button)>,
            <WithStyles(Button)
              onClick={[Function]}
            >
              Delete room
            </WithStyles(Button)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": false,
              "onClick": [Function],
              "size": "10",
            },
            "ref": null,
            "rendered": false,
            "type": "select",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "join-user-name",
              "label": "User Name",
              "margin": "normal",
              "onChange": [Function],
              "required": false,
              "select": false,
              "value": "",
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "join-room-password",
              "label": "Room Password",
              "onChange": [Function],
              "required": false,
              "select": false,
              "type": "password",
              "value": "",
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "Naked": [Function],
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-bxivhb",
                "isStatic": true,
                "rules": Array [
                  "
  &&{
  margin: 0 auto;
  }
",
                ],
              },
              "displayName": "Styled(WithStyles(CircularProgress))",
              "options": Object {
                "flip": false,
                "name": "MuiCircularProgress",
              },
              "render": [Function],
              "styledComponentId": "sc-bxivhb",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Join room",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Join room",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Delete room",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Delete room",
            "type": [Function],
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  flex-direction: column;
  width: 90%;
  margin: 0 auto;
  position: relative;
  top: calc(50vh - 144px);
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "Naked": [Function],
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": true,
          "rules": Array [
            "
  height: calc(100vh - 48px);
",
          ],
        },
        "displayName": "Styled(WithStyles(Card))",
        "options": Object {
          "name": "MuiCard",
        },
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "Naked": [Function],
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
  height: calc(100vh - 48px);
",
        ],
      },
      "displayName": "Styled(WithStyles(Grid))",
      "options": Object {
        "name": "MuiGrid",
      },
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef>
          <ForwardRef>
            <select
              onClick={[Function]}
              size="10"
            />
            <TextField
              id="join-user-name"
              label="User Name"
              margin="normal"
              onChange={[Function]}
              required={false}
              select={false}
              value=""
              variant="standard"
            />
            <TextField
              id="join-room-password"
              label="Room Password"
              onChange={[Function]}
              required={false}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <ForwardRef />
            <WithStyles(Button)
              onClick={[Function]}
            >
              Join room
            </WithStyles(Button)>
            <WithStyles(Button)
              onClick={[Function]}
            >
              Delete room
            </WithStyles(Button)>
          </ForwardRef>
        </ForwardRef>,
        "item": true,
        "xs": 6,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef>
            <select
              onClick={[Function]}
              size="10"
            />
            <TextField
              id="join-user-name"
              label="User Name"
              margin="normal"
              onChange={[Function]}
              required={false}
              select={false}
              value=""
              variant="standard"
            />
            <TextField
              id="join-room-password"
              label="Room Password"
              onChange={[Function]}
              required={false}
              select={false}
              type="password"
              value=""
              variant="standard"
            />
            <ForwardRef />
            <WithStyles(Button)
              onClick={[Function]}
            >
              Join room
            </WithStyles(Button)>
            <WithStyles(Button)
              onClick={[Function]}
            >
              Delete room
            </WithStyles(Button)>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <select
                onClick={[Function]}
                size="10"
              />,
              <TextField
                id="join-user-name"
                label="User Name"
                margin="normal"
                onChange={[Function]}
                required={false}
                select={false}
                value=""
                variant="standard"
              />,
              <TextField
                id="join-room-password"
                label="Room Password"
                onChange={[Function]}
                required={false}
                select={false}
                type="password"
                value=""
                variant="standard"
              />,
              <ForwardRef />,
              false,
              <WithStyles(Button)
                onClick={[Function]}
              >
                Join room
              </WithStyles(Button)>,
              <WithStyles(Button)
                onClick={[Function]}
              >
                Delete room
              </WithStyles(Button)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": false,
                "onClick": [Function],
                "size": "10",
              },
              "ref": null,
              "rendered": false,
              "type": "select",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "join-user-name",
                "label": "User Name",
                "margin": "normal",
                "onChange": [Function],
                "required": false,
                "select": false,
                "value": "",
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "join-room-password",
                "label": "Room Password",
                "onChange": [Function],
                "required": false,
                "select": false,
                "type": "password",
                "value": "",
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "Naked": [Function],
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "rules": Array [
                    "
  &&{
  margin: 0 auto;
  }
",
                  ],
                },
                "displayName": "Styled(WithStyles(CircularProgress))",
                "options": Object {
                  "flip": false,
                  "name": "MuiCircularProgress",
                },
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Join room",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Join room",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Delete room",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Delete room",
              "type": [Function],
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "rules": Array [
                "
  display: flex;
  flex-direction: column;
  width: 90%;
  margin: 0 auto;
  position: relative;
  top: calc(50vh - 144px);
",
              ],
            },
            "displayName": "styled.div",
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "Naked": [Function],
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": true,
            "rules": Array [
              "
  height: calc(100vh - 48px);
",
            ],
          },
          "displayName": "Styled(WithStyles(Card))",
          "options": Object {
            "name": "MuiCard",
          },
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "Naked": [Function],
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
  height: calc(100vh - 48px);
",
          ],
        },
        "displayName": "Styled(WithStyles(Grid))",
        "options": Object {
          "name": "MuiGrid",
        },
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
